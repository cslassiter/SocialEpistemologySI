unnest(cols = c(value))%>%
mutate(value = trimws(value))%>%
na.omit()%>%
mutate(value = str_replace_all(value, "DECISION-MAKING", "DECISION_MAKING"))%>%
group_by(value)%>%
summarise(n = n())%>%
ungroup()%>%
arrange(-n, value)%>%
slice(1:25)%>%
mutate(value = str_replace_all(value, "_", " "))%>%
view()
TEp$DE_TM%>%
as_tibble()%>%
mutate(value = str_replace_all(value, " ", "_"))%>%
mutate(value = strsplit(value, ";"))%>%
unnest(cols = c(value))%>%
mutate(value = trimws(value))%>%
na.omit()%>%
mutate(value = str_replace_all(value, "DECISION-MAKING", "DECISION_MAKING"),
value = str_replace_all(value, "COVID-", "COVID"))%>%
group_by(value)%>%
summarise(n = n())%>%
ungroup()%>%
arrange(-n, value)%>%
slice(1:25)%>%
mutate(value = str_replace_all(value, "_", " "))%>%
view()
TEp$DE_TM%>%
as_tibble()%>%
mutate(value = str_replace_all(value, " ", "_"))%>%
mutate(value = strsplit(value, ";"))%>%
unnest(cols = c(value))%>%
mutate(value = trimws(value))%>%
na.omit()%>%
mutate(value = str_replace_all(value, "DECISION-MAKING", "DECISION_MAKING"),
value = str_replace_all(value, "COVID-", "COVID"))%>%
filter(value != "EXPERTISE")%>%
group_by(value)%>%
summarise(n = n())%>%
ungroup()%>%
arrange(-n, value)%>%
slice(1:25)%>%
mutate(value = str_replace_all(value, "_", " "))%>%
view()
TEp$DE_TM%>%
as_tibble()%>%
mutate(value = str_replace_all(value, " ", "_"))%>%
mutate(value = strsplit(value, ";"))%>%
unnest(cols = c(value))%>%
mutate(value = trimws(value))%>%
na.omit()%>%
mutate(value = str_replace_all(value, "DECISION-MAKING", "DECISION_MAKING"),
value = str_replace_all(value, "COVID-", "COVID"),
value = str_remove_all (value, "JUDGEMENT_AND_"))%>%
filter(value != "EXPERTISE")%>%
group_by(value)%>%
summarise(n = n())%>%
ungroup()%>%
arrange(-n, value)%>%
slice(1:25)%>%
mutate(value = str_replace_all(value, "_", " "))%>%
view()
TEp$DE_TM%>%
as_tibble()%>%
mutate(value = str_replace_all(value, " ", "_"))%>%
mutate(value = strsplit(value, ";"))%>%
unnest(cols = c(value))%>%
mutate(value = trimws(value))%>%
na.omit()%>%
mutate(value = str_replace_all(value, "DECISION-MAKING", "DECISION_MAKING"),
value = str_replace_all(value, "COVID-", "COVID"),
value = str_remove_all (value, "JUDGMENT_AND_"))%>%
filter(value != "EXPERTISE")%>%
group_by(value)%>%
summarise(n = n())%>%
ungroup()%>%
arrange(-n, value)%>%
slice(1:25)%>%
mutate(value = str_replace_all(value, "_", " "))%>%
view()
TEp$DE_TM%>%
as_tibble()%>%
mutate(value = str_replace_all(value, " ", "_"))%>%
mutate(value = strsplit(value, ";"))%>%
unnest(cols = c(value))%>%
mutate(value = trimws(value))%>%
na.omit()%>%
mutate(value = str_replace_all(value, "DECISION-MAKING", "DECISION_MAKING"),
value = str_replace_all(value, "COVID-", "COVID"),
value = str_remove_all (value, "JUDGMENT_AND_"))%>%
filter(value != "EXPERTISE")%>%
group_by(value)%>%
summarise(n = n())%>%
ungroup()%>%
arrange(-n, value)%>%
slice(1:25)%>%
mutate(value = str_replace_all(value, "_", " "))%>%
ggplot()+
aes(x = reorder(value, n), y = n)+
geom_bar(stat = "identity")+
coord_flip()+
theme_minimal(base_size = 18)+
labs(y = "Count", x = "Terms in abstracts")
TEp$DE_TM%>%
as_tibble()%>%
mutate(value = str_replace_all(value, " ", "_"))%>%
mutate(value = strsplit(value, ";"))%>%
unnest(cols = c(value))%>%
mutate(value = trimws(value))%>%
na.omit()%>%
mutate(value = str_replace_all(value, "DECISION-MAKING", "DECISION_MAKING"),
value = str_replace_all(value, "COVID-", "COVID"),
value = str_replace_all (value, "JUDGMENT_AND_DECISION_MAKING", "JUDGMENT"))%>%
filter(value != "EXPERTISE")%>%
group_by(value)%>%
summarise(n = n())%>%
ungroup()%>%
arrange(-n, value)%>%
slice(1:25)%>%
mutate(value = str_replace_all(value, "_", " "))%>%
ggplot()+
aes(x = reorder(value, n), y = n)+
geom_bar(stat = "identity")+
coord_flip()+
theme_minimal(base_size = 18)+
labs(y = "Count", x = "Terms in abstracts")
View(TEp)
TEp%>%
filter("INTUITION" %in% DM_TE)%>%
view()
TEp%>%
filter("INTUITION" %in% DE_TM)%>%
view()
?%in%
??%in%
filter(str_detect(DE_TM, "INTUITION")%>%
TEp%>%
filter(str_detect(DE_TM, "INTUITION"))%>%
view()
networkPlot(keywordsp, normalize="association", weighted=T, n = 60, Title = "Keyword Co-occurrences", type = "fruchterman", size=F,edgesize = 10, label.cex = F, labelsize=1)
networkPlot(keywordsp, normalize="association", weighted=T, n = 100, Title = "Keyword Co-occurrences", type = "fruchterman", size=F,edgesize = 10, label.n = 4, label.cex = F, labelsize=1)
networkPlot(keywordsp, normalize="association", weighted=T, n = 100, Title = "Keyword Co-occurrences", type = "fruchterman", size=F,edgesize = 10, label.n = 4, label.cex = F, labelsize=1)->psych_net
psych_net$community_obj
psych_net$community_obj%>% view()
psych_net$community_obj$membership
psych_net$community_obj%>% as.tibble()
psych_net$community_obj%>%
tibble()%>%
view()
mode(psych_net)
mode(psych_net$community_obj)
mode(psych_net$community_obj$membership)
is.vector(psych_net$community_obj$membership)
mode(psych_net$community_obj$merges
)
psych_net$community_obj$merges
psych_net$community_obj$membership
psych_net$community_obj$names
psych_net$community_obj%>%
as_tibble()
psych_net$community_obj$names%>%
as_tibble()
cbind(psych_net$community_obj$names, psych_net$cluster_obj$membership)%>%
as_tibble()
cbind(psych_net$community_obj$names, psych_net$cluster_obj$membership)
tibble(cbind(psych_net$community_obj$names, psych_net$cluster_obj$membership))
tibble(cbind(psych_net$community_obj$names, psych_net$cluster_obj$membership))%>%
view()
tibble(cbind(psych_net$community_obj$names, psych_net$cluster_obj$membership))%>%
view()
psych_net$cluster_res
psych_net$cluster_res%>%
view()
networkPlot(keywordsp, normalize="association", weighted=T, n = 100, Title = "Keyword Co-occurrences", type = "fruchterman", size=F,edgesize = 10, halo = T,label.n = 8, label.cex = F, labelsize=1)#->psych_net
networkPlot(keywordsp, normalize="association", weighted=T, n = 100, Title = "Keyword Co-occurrences", type = "fruchterman", size=F,edgesize = 10,label.n = 8, label.cex = F, labelsize=1)#->psych_net
networkPlot(keywordsp, normalize="association", weighted=T, n = 100, Title = "Keyword Co-occurrences", type = "fruchterman", size=F,edgesize = 10,label.n = 12, label.cex = F, labelsize=1)#->psych_net
networkPlot(keywordsp, normalize="association", weighted=T, n = 100, Title = "Keyword Co-occurrences", type = "fruchterman", size=F,edgesize = 10,label.n = 20, label.cex = F, labelsize=1)#->psych_net
networkPlot(keywordsp, normalize="association", weighted=T, n = 100, Title = "Keyword Co-occurrences", type = "fruchterman", size=F,edgesize = 10,label.n = 20, label.cex = F, labelsize=1)->psych_net
tibble(cbind(psych_net$community_obj$names, psych_net$cluster_obj$membership))%>%
view()
psych_net$cluster_res%>%
view()
tibble(cbind(psych_net$community_obj$names, psych_net$cluster_obj$membership))%>%
view()
psych_net$cluster_res%>%
view()
networkPlot(keywordsp, normalize="association", weighted=T, n = 150, Title = "Keyword Co-occurrences", type = "fruchterman", size=F,edgesize = 10,label.n = 11, label.cex = F, labelsize=1)->psych_net
library(bibliometrix)
library(tidyverse)
library(tidytext)
networkPlot(keywordsp, normalize="association", weighted=T, n = 50, Title = "Keyword Co-occurrences", type = "fruchterman", size=T,edgesize = 10, label.cex = F, labelsize=1)#->psych_net
biblioNetwork(M1_refined, analysis = "co-citation", network = "authors", sep = ";")
M1 %>%
mutate(
CR = str_replace_all(CR, "ANNAS JULIA", "ANNAS J" ),
CR = str_replace_all(CR, "BUCKWALTER WESLEY", "BUCKWALTER W" ),
CR = str_replace_all(CR, "CARTER J.*", "CARTER JA" ),
CR = str_replace_all(CR, "CHALMERS DJ", "CHALMERS D" ),
CR = str_replace_all(CR, "COLLINS H?.*", "COLLINS H" ),
CR = str_replace_all(CR, "DEWEY JOHN", "DEWEY J" ),
CR = str_replace_all(CR, "DOUGLAS HEATHERE", "DOUGLAS H" ),
CR = str_replace_all(CR, "DREYFUS H.*", "DREYFUS H" ),
CR = str_replace_all(CR, "ESTLUND DM", "ESTLUND D" ),
CR = str_replace_all(CR, "FELDMAN RICHARD", "FELDMAN R" ),
CR = str_replace_all(CR, "FEYERABEND .*", "FEYERABEND P" ),
CR = str_replace_all(CR, "FODOR JA", "FODOR J" ),
CR = str_replace_all(CR, "GOLDBERG S.*", "GOLDBERG S" ),
CR = str_replace_all(CR, "GOLDMAN .*", "GOLDMAN A" ),
CR = str_replace_all(CR, "HABERMAS JURGEN", "HABERMAS J" ),
CR = str_replace_all(CR, "HAWTHORNE JOHN", "HAWTHORNE J" ),
CR = str_replace_all(CR, "HUME DAVID", "HUME D" ),
CR = str_replace_all(CR, "KANT IMMANUEL", "KANT I" ),
CR = str_replace_all(CR, "KUHN .*", "KUHN T" ),
CR = str_replace_all(CR, "LATOUR BRUNO", "LATOUR B" ),
CR = str_replace_all(CR, "LONGINO H.*", "LONGINO H" ),
CR = str_replace_all(CR, "MILL .*", "MILL JS" ),
CR = str_replace_all(CR, "NUSSBAUM MC", "NUSSBAUM M" ),
CR = str_replace_all(CR, "O NEILL O", "ONEILL O" ),
CR = str_replace_all(CR, "PRITCHARD DUNCAN", "PRITCHARD D" ),
CR = str_replace_all(CR, "RAWLS JOHN", "RAWLS J" ),
CR = str_replace_all(CR, "RAZ JOSEPH", "RAZ J" ),
CR = str_replace_all(CR, "RYLE GILBERT", "RYLE G" ),
CR = str_replace_all(CR, "SINGER PETER", "SINGER P" ),
CR = str_replace_all(CR, "SOSA^", "SOSA E" ),
CR = str_replace_all(CR, "SUNSTEIN CASS R", "SUNSTEIN CR" ),
CR = str_replace_all(CR, "WALTON .*", "WALTON D" ),
CR = str_replace_all(CR, "WILLIAMS BERNARD", "WILLIAMS B" ),
CR = str_replace_all(CR, "WILLIAMSON TIMOTHY", "WILLIAMSON T" ),
CR = str_replace_all(CR, "ZAGZEBSKI .*", "ZAGZEBSKI L" ),
CR = str_remove_all(CR, "NO TITLE .*")
)->M1
M1 %>%
filter(str_detect(DE, "EXPERT.*") | str_detect(AB, "EXPERT.*"))->M1_refined
keywords <- biblioNetwork(M1_refined, analysis = "co-occurrences", network = "keywords", sep = ";")
biblioNetwork(M1_refined, analysis = "co-citation", network = "authors", sep = ";")
biblioNetwork(M1_refined, analysis = "co-citation", network = "references", sep = ";")
co-cite_M1<-biblioNetwork(M1_refined, analysis = "co-citation", network = "references", sep = ";")
co_cite_M1<-biblioNetwork(M1_refined, analysis = "co-citation", network = "references", sep = ";")
networkPlot(co_cite_M1, normalize="association", weighted=T, degree = 18, type = "fruchterman", size=T,edgesize = 10, label.cex = F, labelsize=1)
networkPlot(co_cite_M1, normalize="association", weighted=T, n = 25, type = "fruchterman", size=T,edgesize = 10, label.cex = F, labelsize=1)
co_cite_M1<-biblioNetwork(M1_refined, analysis = "co-citation", network = "authors", sep = ";")
networkPlot(co_cite_M1, normalize="association", weighted=T, n = 35, type = "fruchterman", size=T,edgesize = 10, label.cex = F, labelsize=1)
memory.size(max=F)
memory.size(max=T)
ls()
gc()
networkPlot(co_cite_M1, normalize="association", weighted=T, n = 35, type = "fruchterman", size=T,edgesize = 10, label.cex = F, labelsize=1)
library(bibliometrix)
library(tidyverse)
library(tidytext)
S
library(bibliometrix)
library(tidyverse)
library(tidytext)
options(ggrepel.max.overlaps = Inf)
networkPlot(keywordsp, normalize="association", weighted=T, n = 30, Title = "Keyword Co-occurrences", type = "fruchterman", size=TRUE, edgesize = 10, remove.isolates = TRUE, label.cex = F, community.repulsion = .05, labelsize=1.5)#->psych_net
Mp1_refined
Mp1_refined <-Mp1 %>%
filter(str_detect(DE, "EXPERT.*")|str_detect(ID, "EXPERT.*")|str_detect(DE, "EXPERT")|str_detect(ID, "EXPERT"))%>%
mutate(DE = (str_remove_all(DE, "EXPERT.*;")))
keywordsp <- biblioNetwork(Mp1_refined, analysis = "co-occurrences", network = "author_keywords", sep = ";")
networkPlot(keywordsp, normalize="association", weighted=T, n = 30, Title = "Keyword Co-occurrences", type = "fruchterman", size=TRUE, edgesize = 10, remove.isolates = TRUE, label.cex = F, community.repulsion = .05, labelsize=1.5)#->psych_net
Mp1_refined%>%
filter(str_detect(DE, "EXPERT.*"))
Mp1_refined%>%
filter(str_detect(DE, "EXPERT.*"))%>%
select(DE)%>%
view()
Mp1_refined <-Mp1 %>%
filter(str_detect(DE, "EXPERT.*")|str_detect(ID, "EXPERT.*")|str_detect(DE, "EXPERT")|str_detect(ID, "EXPERT"))%>%
mutate(DE = (str_remove_all(DE, "EXPERT.*(;)?")))
Mp1 <- Mp1%>%
mutate(DE = str_replace_all(DE, "JUDGMENTS", "JUDGMENT"),
DE = str_replace_all(DE, "DECISION-MAKING", "DECISION MAKING"),
DE = str_replace_all(DE,  "JUDGMENT AND DECISION MAKING", "JUDGMENT"),
DE = str_replace_all(DE,  "EXPERTS", "EXPERT"))
Mp1_refined <-Mp1 %>%
filter(str_detect(DE, "EXPERT.*")|str_detect(ID, "EXPERT.*")|str_detect(DE, "EXPERT")|str_detect(ID, "EXPERT"))%>%
mutate(DE = (str_remove_all(DE, "EXPERT.*(;)?")))
Mp1_refined <-Mp1 %>%
filter(str_detect(DE, "EXPERT.*")|str_detect(ID, "EXPERT.*")|str_detect(DE, "EXPERT")|str_detect(ID, "EXPERT"))%>%
mutate(DE = (str_remove_all(DE, "EXPERT.*")))
Mp1_refined <-Mp1 %>%
filter(str_detect(DE, "EXPERT.*")|str_detect(ID, "EXPERT"))%>%
mutate(DE = (str_remove_all(DE, "EXPERT.*")))
Mp1_refined <-Mp1 %>%
filter(str_detect(DE, "EXPERT.*")|str_detect(ID, "EXPERT"))#%>%
Mp1_refined <-Mp1 %>%
filter(str_detect(DE, "EXPERT.*")|str_detect(ID, "EXPERT.*"))%>%
mutate(DE = (str_remove_all(DE, "EXPERT.*")))
Mp1 <- Mp1%>%
mutate(DE = str_replace_all(DE, "JUDGMENTS", "JUDGMENT"),
DE = str_replace_all(DE, "DECISION-MAKING", "DECISION MAKING"),
DE = str_replace_all(DE,  "JUDGMENT AND DECISION MAKING", "JUDGMENT"),
DE = str_replace_all(DE,  "EXPERTS", "EXPERT"))
Mp1 <- Mp
Mp1 <- Mp1%>%
mutate(DE = str_replace_all(DE, "JUDGMENTS", "JUDGMENT"),
DE = str_replace_all(DE, "DECISION-MAKING", "DECISION MAKING"),
DE = str_replace_all(DE,  "JUDGMENT AND DECISION MAKING", "JUDGMENT"),
DE = str_replace_all(DE,  "EXPERTS", "EXPERT"))
Mp1_refined <- Mp1 %>%
filter(str_detect(DE, "EXPERT.*")|str_detect(ID, "EXPERT.*"))%>%
mutate(DE = (str_remove_all(DE, "EXPERT.*")))
Mp1 %>%
filter(str_detect(DE, "EXPERT.*")|str_detect(ID, "EXPERT.*"))%>%
mutate(DE = (str_remove_all(DE, "EXPERT.*")))
Mp1_refined <- Mp1 %>%
filter(str_detect(DE, "EXPERT.*")|str_detect(ID, "EXPERT.*"))%>%
mutate(DE = (str_remove_all(DE, "EXPERT.*")))
Psych_refinde <- Mp1 %>%
filter(str_detect(DE, "EXPERT.*")|str_detect(ID, "EXPERT.*"))%>%
mutate(DE = (str_remove_all(DE, "EXPERT.*")))
rm(Psych_refinde)
Mp1 <- Mp
Mp1 <- Mp1%>%
mutate(DE = str_replace_all(DE, "JUDGMENTS", "JUDGMENT"),
DE = str_replace_all(DE, "DECISION-MAKING", "DECISION MAKING"),
DE = str_replace_all(DE,  "JUDGMENT AND DECISION MAKING", "JUDGMENT"),
DE = str_replace_all(DE,  "EXPERTS", "EXPERT"))
psych_refined <- Mp1 %>%
filter(str_detect(DE, "EXPERT.*(;)?")|str_detect(ID, "EXPERT.*(;)?"))%>%
mutate(DE = (str_remove_all(DE, "EXPERT.*")))
rm(Mp1_refined)
psych_refined%>%
filter(str_detect(DE, "EXPERT.*;"))%>%
select(DE)%>%
view()
keywordsp <- biblioNetwork(psych_refined, analysis = "co-occurrences", network = "author_keywords", sep = ";")
par(mar = c(1, 1, 1, 1))
library(bibliometrix)
library(tidyverse)
library(tidytext)
file_psych <- c("savedrecs_psych_1.bib", "savedrecs_psych_2.bib", "savedrecs_psych_3.bib")
Mp <- convert2df(file = file_psych, dbsource = "isi", format = "bibtex")
Mp1 <- Mp
Mp1 <- Mp1%>%
mutate(DE = str_replace_all(DE, "JUDGMENTS", "JUDGMENT"),
DE = str_replace_all(DE, "DECISION-MAKING", "DECISION MAKING"),
DE = str_replace_all(DE,  "JUDGMENT AND DECISION MAKING", "JUDGMENT"),
DE = str_replace_all(DE,  "EXPERTS", "EXPERT"))
psych_refined <- Mp1 %>%
filter(str_detect(DE, "EXPERT.*(;)?")|str_detect(ID, "EXPERT.*(;)?"))%>%
mutate(DE = (str_remove_all(DE, "EXPERT.*")))
keywordsp <- biblioNetwork(psych_refined, analysis = "co-occurrences", network = "author_keywords", sep = ";")
networkPlot(keywordsp, normalize="association", weighted=T, n = 30, Title = "Keyword Co-occurrences", type = "fruchterman", size=TRUE, edgesize = 10, remove.isolates = TRUE, label.cex = F, community.repulsion = .05, labelsize=1.5)#->psych_net
par(mar = c(1, 1, 1, 1))
png("keyword_psych.png", width = 18, height = 18, units = "in", res = 400, bg = "white")
networkPlot(keywordsp, normalize="association", weighted=T, n = 30, Title = "Keyword Co-occurrences", type = "fruchterman", size=TRUE, edgesize = 10, remove.isolates = TRUE, label.cex = F, community.repulsion = .05, labelsize=1.5)#->psych_net
dev.off()
networkPlot(keywordsp, normalize="association", weighted=T, n = 30, Title = "Keyword Co-occurrences in the psychological literature", type = "fruchterman", size=TRUE, edgesize = 10, remove.isolates = TRUE, label.cex = F, community.repulsion = .05, labelsize=1.5)#->psych_net
title("This is my first igraph",cex.main=3)
networkPlot(keywordsp, normalize="association", weighted=T, n = 30, type = "fruchterman", size=TRUE, edgesize = 10, remove.isolates = TRUE, label.cex = F, community.repulsion = .05, labelsize=1.5)#->psych_net
networkPlot(keywordsp, normalize="association", weighted=T, n = 30, title = "", type = "fruchterman", size=TRUE, edgesize = 10, remove.isolates = TRUE, label.cex = F, community.repulsion = .05, labelsize=1.5)#->psych_net
networkPlot(keywordsp, normalize="association", weighted=T, n = 30, Title = "", type = "fruchterman", size=TRUE, edgesize = 10, remove.isolates = TRUE, label.cex = F, community.repulsion = .05, labelsize=1.5)#->psych_net
title("Keyword Co-occurrences in the psychological literature",cex.main=3)
title("Keyword Co-occurrences in the\npsychological literature",cex.main=3)
par(mar = c(1, 1, 1, 1))
png("keyword_psych.png", width = 18, height = 18, units = "in", res = 400, bg = "white")
networkPlot(keywordsp, normalize="association", weighted=T, n = 30, Title = "", type = "fruchterman", size=TRUE, edgesize = 10, remove.isolates = TRUE, label.cex = F, community.repulsion = .05, labelsize=1.5)#->psych_net
title("Keyword Co-occurrences in the\npsychological literature",cex.main=3)
dev.off()
par(mar = c(1, 1, 1, 1))
png("keyword_psych.png", width = 5000, height = 5000, units = "px", res = 400, bg = "white")
networkPlot(keywordsp, normalize="association", weighted=T, n = 30, Title = "Keyword co-occurrences in the\npsychological literature", type = "fruchterman", size=TRUE, edgesize = 10, remove.isolates = TRUE, label.cex = F, community.repulsion = .05, labelsize=1.5)#->psych_net
dev.off()
par(mar = c(1, 1, 1, 1))
png("keyword_psych.png", width = 5000, height = 5000, units = "px", res = 400, bg = "white")
networkPlot(keywordsp, normalize="association", weighted=T, n = 30, Title = "Keyword co-occurrences in the psychological literature", type = "fruchterman", size=TRUE, edgesize = 10, remove.isolates = TRUE, label.cex = F, community.repulsion = .05, labelsize=1)#->psych_net
dev.off()
install.packages("qgraph")
library(qgraph)
networkPlot(keywordsp, normalize="association", weighted=T, n = 30, Title = "Keyword co-occurrences in the psychological literature", type = "fruchterman", size=TRUE, edgesize = 10, remove.isolates = TRUE, label.cex = F, community.repulsion = .05, labelsize=1)->psych_net
qgraph(psych_net)
qgraph(psych_net$graph)
qgraph(psych_net$graph_pajek)
qgraph(psych_net)
qgraph(psych_net$graph[weight])
qgraph(psych_net$graph[[weight]])
psych_net$graph[[weight]]
psych_net$graph
psych_net$graph$weight
psych_net$graph[weight]
psych_net$nodeDegree%>%
arrange(-degree)%>%
view()
psych_net$cluster_res
psych_net$cluster_res%>% view()
psych_net$nodeDegree%>% view()
psych_net$cluster_res%>% view()
psych_net$cluster_res -> x
psych_net$nodeDegree -> y
y%>%
rename(vertex = node)%>%
inner_join(x, by = "node")%>%
view()
y%>%
rename(vertex = node)%>%
inner_join(x, by = "vertex")%>%
view()
psych_net$cluster_obj
psych_net$cluster_obj$modularity
cbind(psych_net$cluster_obj$modularity, psych_net$cluster_obj$names)
cbind(psych_net$cluster_obj$modularity, psych_net$cluster_obj$names, psych_net$cluster_obj$membership)
tibble(cbind(psych_net$cluster_obj$modularity, psych_net$cluster_obj$names, psych_net$cluster_obj$membership)) -> cluster_vals
View(cluster_vals)
tibble(cbind(mod = psych_net$cluster_obj$modularity, names = psych_net$cluster_obj$names, grop =  psych_net$cluster_obj$membership)) -> cluster_vals
tibble(cbind(mod = psych_net$cluster_obj$modularity, names = psych_net$cluster_obj$names, group =  psych_net$cluster_obj$membership)) -> cluster_vals
cluster_vals%>%
mutate(mod = as.numeric(mod),
group = as.numeric(group))->cluster_vals
cluster_vals
cluster_vals%>%
mutate(mod = as.numeric(`[,"mod"]`),
group = as.numeric(`[,"group"]`))->cluster_vals
tibble(cbind(mod = psych_net$cluster_obj$modularity, names = psych_net$cluster_obj$names, group =  psych_net$cluster_obj$membership)) -> cluster_vals
cluster_vals%>%
rename(mod = 1, names = 2, group = 3)%>%
mutate(mod = as.numeric(mod),
group = as.numeric(group))->cluster_vals
tibble(mod = psych_net$cluster_obj$modularity, names = psych_net$cluster_obj$names, group =  psych_net$cluster_obj$membership) -> cluster_vals
cluster_vals%>%
rename(mod = 1, names = 2, group = 3)%>%
mutate(mod = as.numeric(mod),
group = as.numeric(group))->cluster_vals
View(cluster_vals)
igraph::modularity_matrix(psych_net$graph)
igraph::modularity_matrix(psych_net$graph_pajek)
igraph::modularity_matrix(psych_net$graph_pajek)%>% view()
igraph::modularity(psych_net$graph_pajek)%>% view()
igraph::modularity(psych_net$graph)%>% view()
igraph::modularity(psych_net$graph, membership = psych_net$cluster_obj$membership)%>% view()
igraph::modularity(psych_net$graph, membership = psych_net$cluster_obj$membership)
psych_net$graph->pg
pg$num
pg[num]
igraph::compare(pg)
library(igraph)
pg$community
as_edgelist(pg)
cluster_louvain(pg)
z <- cluster_louvain(pg)
V(pg)$name <- membership(z)
x <- as_edgelist(pg, names = T)
V(pg)$name <- 1:vcount(pg)
pg
E(pg)[x[,1] != x[,2]]
E(pg)$color <- ifelse(x[,1] != x[,2], "red", "blue")
plot(pg, edge.color = E(g)$color)
plot(pg, edge.color = E(pg)$color)
plot(pg)
psych_net$graph->pg
plot(pg)
cluster_vals%>%
rename(mod = 1, names = 2, group = 3)%>%
mutate(mod = as.numeric(mod),
group = as.numeric(group))->cluster_vals
cluster_vals
V(pg)$name <- membership(z)
x <- as_edgelist(pg, names = T)
V(pg)$name <- 1:vcount(pg)
E(pg)[x[,2] != x[,4]]
E(pg)[x[,1] != x[,2]]
E(pg)[x[,1] != x[,2]]%>% view()
E(pg)[x[,1] == x[,2]]%>% view()
E(pg)[x[,1] == x[,2]]
x
E(pg)[x[,1] != x[,2]]
V(pg)$name
V(pg)
E(pg)[x[,1] != x[,2]]
E(pg)
pg
membership(z)
E(pg)[x[,1] != x[,2]]
as_edgelist(pg, names = T)
membership(z)
z
E(pg)[x[,1] != x[,2]]
x
membership(z)
V(pg)$name
psych_net$graph->pg
V(pg)$name
V(pg)$name1 <- membership(z)
x <- as_edgelist(pg, names = T)
V(pg)$name1 <- 1:vcount(pg)
V(pg)$name1
V(pg)
cbind(V(pg)$name, V(pg)$name1)
E(pg)[x[,1] != x[,2]]
print(E(pg)[x[,1] != x[,2]], n = Inf)
print(E(pg)[x[,1] != x[,2]], n = 95)
E(pg)[x[,1] != x[,2]]%>% view()
cluster_vals
View(cluster_vals)
E(pg)[x[,1] != x[,2]]
V(pg)$name1 <- membership(z)
x <- as_edgelist(pg, names = T)
V(pg)$name <- 1:vcount(pg)
cbind(V(pg)$name, V(pg)$name1)
E(pg)[x[,1] != x[,2]]
library(bibliometrix)
library(tidyverse)
library(tidytext)
S$MostCitedPapers
S
results
cites%>%
filter(Freq >= 50)%>%
arrange(-Freq, CR)%>%
view()
